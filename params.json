{
  "name": "移动端列表开发功能大全",
  "tagline": "移动端列表开发功能大全这个案例主要总结了移动端开发一些经常用到的效果，例如，下拉分页，模糊搜索，搜索历史记录，已经导航菜单切换等功能。并运用了requirejs对代码进行压缩合并。案例中common.js 是不用require的情况下，封装的一个模糊搜索和下拉分页的函数。",
  "body": "## 移动端列表开发功能大全\r\n\r\n这个案例主要总结了移动端开发一些经常用到的效果，例如，下拉分页，模糊搜索，搜索历史记录，已经导航菜单切换等功能。并运用了requirejs对代码进行压缩合并。案例中common.js\r\n是不用require的情况下，封装的一个模糊搜索和下拉分页的函数。\r\n\r\n## 搜索历史记录图片如下\r\n\r\n搜索历史运用了localStorage进行数据的临时存储，关于localStorage的一些用法，我之前的一篇文章中也写过！\r\n具体如下：[html5之Localstorage本地存储][3]\r\n\r\n![搜索历史记录](https://raw.githubusercontent.com/confidence68/mobile_touchload_mohuSearch/master/images/history.jpg)\r\n\r\n\r\n## 模糊搜索案例如下：\r\n\r\n搜索中，我运用了正则进行替换，关于正则表达式的一些用法，我博客中之前写过很多，大家可以看[这个地址][4]\r\n\r\n![模糊搜索](https://raw.githubusercontent.com/confidence68/mobile_touchload_mohuSearch/master/images/mohusearch.jpg)\r\n\r\n## 菜单切换的案例如下：\r\n\r\n在制作菜单切换中，我之前有文章也介绍过，感兴趣的可以看一下[手机网站表层div滑动，导致底层body滑动（touchmove的阻止）][5]\r\n\r\n![菜单切换](https://raw.githubusercontent.com/confidence68/mobile_touchload_mohuSearch/master/images/menu.jpg)\r\n\r\n\r\n\r\n## commonjs封装函数用法\r\n\r\n下拉分页：\r\n\r\n页面中指定下来分页的地址，下拉分页的ID，下来分页的pageData和回调函数就可以了。代码大体如下：\r\n\r\n    var listObj={\r\n        pagenumber:2,\r\n        initList:function(){\r\n            commonObj.moreUrl = \"\";//设置下拉分页url\r\n            commonObj.appendId=\"\";//设置下拉分页id\r\n            //下滑分页数据\r\n            commonObj.pageData={page:listObj.pagenumber,t:true};\r\n            //下滑分页回调函数\r\n            commonObj.searchCallBack=function(res){\r\n                console.log(res);\r\n                $(\".loaddiv\").hide();\r\n                var dataLength=res.data.length;\r\n                if(dataLength>0){\r\n                    listObj.pagenumber++;\r\n                    commonObj.ajaxstatus=true;\r\n                    commonObj.pageData.page=listObj.pagenumber;\r\n                    var htmlArray=[];\r\n                    for(var i=0;i<dataLength;i++){\r\n                        htmlArray[i]='<a class=\"shudongli\"\" href=\"'+res.data[i].sUrl+'\">'+\r\n                    '<div class=\"sdliinner\">'+\r\n                        '<div class=\"leftimage\"><img src=\"'+res.data[i].sImageUrl+'\" alt=\"\"></div>'+\r\n                        '<div class=\"rightcontent\">'+\r\n                           ' <p class=\"toptitle\">'+res.data[i].sTitle+'</p>'+\r\n                            '<p class=\"s_time\">发布时间 '+res.data[i].iPublishTime+'</p>'+\r\n                           '</div></div></a>';\r\n\r\n                    }\r\n                    $(\"#\"+commonObj.appendId).append(htmlArray.join(\"\"));\r\n                }else{\r\n                    commonObj.fenyestatus=false\r\n                }\r\n            }\r\n            //下滑分页触发\r\n            commonObj.scrollNextPage();\r\n\r\n        }\r\n    }\r\n    $(listObj.initList)\r\n\t\r\n下来分页就可以了！\r\n\r\n## requirejs压缩合并代码\r\n\r\n假如项目中你的依赖比较多，可以用requirejs。\r\n\r\n关于reruirejs的压缩，可以看我之前的一篇博客文章：http://www.haorooms.com/post/requirejs_Optimizer_hbys\r\n\r\n具体是[requirejs的Optimizer 对require项目的合并与压缩][1]\r\n\r\n\r\n\r\n## canvas图片加载\r\n\r\n这个案例中，图片初始化加载是异步用canvas渲染的。\r\n\r\n关于canvas加载，我之前也写了一篇文章，感兴趣的可以去看一下[touchweb手机网站图片加载方法（canvas加载和延迟加载）][2]\r\n\r\n\r\n[1]:http://www.haorooms.com/post/requirejs_Optimizer_hbys\r\n[2]:http://www.haorooms.com/post/touchweb_canvas_lazyload\r\n[3]:http://www.haorooms.com/post/html5_localstorage\r\n[4]:http://www.haorooms.com/search?keyword=%E6%AD%A3%E5%88%99\r\n[5]:http://www.haorooms.com/post/webapp_bodyslidebcdiv",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}